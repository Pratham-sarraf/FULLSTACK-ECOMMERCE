<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>My Cart | UrbanCommerce</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&family=Righteous&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --primary: #6c5ce7;
      --secondary: #00cec9;
      --accent: #fd79a8;
      --dark: #2d3436;
      --light: #f5f6fa;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, var(--primary), var(--secondary));
      color: var(--dark);
      padding: 2rem;
      min-height: 100vh;
    }

    .orders-container {
      max-width: 1200px;
      margin: auto;
    }

    .orders-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
      flex-wrap: wrap; /* Allow wrapping on small screens */
    }

    .orders-title {
      font-size: 2rem;
      font-family: 'Righteous', cursive;
      color: white;
    }

    .profile-btn {
      background: linear-gradient(to right, var(--primary), var(--accent));
      color: white;
      padding: 0.8rem 1.2rem;
      border-radius: 10px;
      text-decoration: none;
      font-weight: bold;
    }

    .orders-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1.5rem;
    }

    .order-card {
      background: white;
      padding: 1rem;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .order-image { width: 100%; height: 150px; object-fit: contain; margin-bottom: 1rem; }
    .order-name { font-size: 1.1rem; font-weight: bold; margin-bottom: 0.5rem; }
    .order-price, .order-total { font-weight: bold; margin: 0.3rem 0; }

    .order-quantity {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-top: 0.5rem;
    }

    .order-quantity button {
      padding: 5px 10px;
      font-size: 16px;
      font-weight: bold;
      background: var(--primary);
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .order-quantity span.quantity { min-width: 24px; text-align: center; }

    .no-orders {
      grid-column: 1 / -1;
      text-align: center;
      color: white;
      font-size: 1.2rem;
      background: rgba(0,0,0,0.2);
      padding: 2rem;
      border-radius: 10px;
    }
    
    /* ✅ NEW DESKTOP LAYOUT TO PREVENT OVERLAPPING */
    .address-container {
      position: relative; /* This container will be centered */
      max-width: 700px;  /* It defines the width of the form area */
      margin: 60px auto;
    }

    .address-form {
      width: 100%; /* Form fills the container */
      background: #ffffff;
      padding: 30px;
      border-radius: 16px;
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    .saved-address-section {
      position: absolute; /* Positioned relative to the container */
      top: 0;
      left: 110%; /* Start at the right edge of the container */
      margin-left: 2rem; /* The gap between the form and the sidebar */
      width: 240px;
      background-color: #fafafa;
      border: 1px solid #ddd;
      padding: 15px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    /* --- Unchanged styles for form and sidebar contents --- */
    .address-form h2 { text-align: center; margin-bottom: 10px; color: #333; }
    .address-form input { padding: 12px 15px; font-size: 16px; border: 1px solid #ccc; border-radius: 8px; }
    .address-buttons { display: flex; gap: 20px; }
    .address-buttons button { flex: 1; padding: 12px; font-size: 16px; border: none; border-radius: 8px; cursor: pointer; transition: background-color 0.3s; }
    .address-buttons button:first-child { background-color: #4caf50; color: white; }
    .address-buttons button:first-child:hover { background-color: #3e8e41; }
    .address-buttons .order-btn { background-color: #f44336; color: white; }
    .address-buttons .order-btn:hover { background-color: #d32f2f; }
    .saved-address-section h3 { font-size: 16px; margin-bottom: 10px; color: #333; text-align: center; }
    .saved-address-list { display: flex; flex-direction: column; gap: 10px; }
    .saved-address-box { background-color: #f0f0f0; padding: 10px; border-radius: 6px; text-align: center; font-weight: bold; font-size: 14px; cursor: pointer; }
    .saved-address-box:hover { background-color: #e0e0e0; }
    .payment-btn-container { text-align: center; margin-top: 30px; margin-bottom: 50px; }
    #proceedToPaymentBtn { background-color: var(--primary); color: white; padding: 15px 30px; font-size: 18px; border: none; border-radius: 10px; cursor: pointer; }
    #proceedToPaymentBtn:disabled { background-color: #cccccc; cursor: not-allowed; }
    .selected { background-color: #b2ebf2 !important; border: 2px solid #00bcd4 !important; }
    
    /* ✅ RESPONSIVE STYLES FOR TABLETS AND MOBILE */
    @media (max-width: 1024px) {
      body {
        padding: 1rem;
      }

      .orders-header {
        flex-direction: column;
        gap: 1rem;
        align-items: center;
      }

      /* On smaller screens, revert to a simple block layout */
      .address-container {
        position: static;
        margin: 40px auto;
        max-width: 600px;
      }

      .saved-address-section {
        position: static;
        width: 100%;
        margin: 0 auto 2rem auto; /* Unset positioning and add space below */
      }
      
      .address-form {
        padding: 1.5rem;
      }

      .address-buttons {
        flex-direction: column;
      }
    }
  </style>
</head>
<body>
  <div class="orders-container">
    <header class="orders-header">
      <h1 class="orders-title">CART</h1>
      <h1 class="orders-title">TOTAL: ₹<span id="total-cost">0</span></h1>
      <a href="/user-profile" class="profile-btn">
        <i class="fas fa-user"></i> <%= user.username.toUpperCase() %>
      </a>
    </header>

    <div class="orders-grid">
      <% if (products.length > 0) { %>
        <% products.forEach(product => { %>
          <div class="order-card" data-id="<%= product._id %>">
            <img src="<%= product.url %>" alt="<%= product.name %>" class="order-image">
            <div class="order-name"><%= product.name %></div>
            <div class="order-price">Price: ₹<span class="unit-price"><%= product.price %></span></div>
            <div class="order-quantity">
              <button class="decrease-btn">−</button>
              <span class="quantity"><%= product.count %></span>
              <button class="increase-btn">+</button>
            </div>
            <div class="order-total">
              Total: ₹<span class="item-total"><%= (product.price * product.count).toLocaleString('en-IN') %></span>
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <div class="no-orders">
          <i class="fas fa-box-open"></i>
          You haven't ordered anything yet!
        </div>
      <% } %>
    </div>
  </div>

  <div class="address-container">
    <form action="/products/all-products/save-address" method="POST" class="address-form" id="addressForm">
      <h2>Enter Delivery Address</h2>
      <input type="text" name="houseNo" id="houseNo" placeholder="House No." required>
      <input type="text" name="street" id="street" placeholder="Street" required>
      <input type="text" name="city" id="city" placeholder="City" required>
      <input type="text" name="country" id="country" placeholder="Country" required>
      <input type="text" name="pincode" id="pincode" placeholder="Pincode" required>
      <input type="text" name="saveAs" id="saveAs" placeholder="Save As (e.g. Home, Office)" >
      <div class="address-buttons">
        <button type="submit" id="saveAddressBtn">Save Address</button>
        <button type="button" class="order-btn" id="placeOrderBtn" disabled>Place Order</button>
      </div>
    </form>
    
    <div class="saved-address-section">
      <h3>Saved Addresses</h3>
      <div class="saved-address-list">
        <% if (user.address && user.address.length > 0) { %>
          <% user.address.forEach(addr => { %>
            <div
              class="saved-address-box"
              data-house="<%= addr.houseNo %>"
              data-street="<%= addr.street %>"
              data-city="<%= addr.city %>"
              data-country="<%= addr.country %>"
              data-pincode="<%= addr.pincode %>"
              data-saveas="<%= addr.saveAs %>"
            >
              <%= addr.saveAs %>
            </div>
          <% }) %>
        <% } else { %>
          <p>No saved addresses</p>
        <% } %>
      </div>
    </div>
  </div>

  <div class="payment-btn-container">
    <button id="proceedToPaymentBtn" disabled>
      Proceed to Payment
    </button>
  </div>

  <script>
    // Autofill Script (no changes needed)
    document.querySelectorAll('.saved-address-box').forEach(box => {
      box.addEventListener('click', () => {
        document.getElementById('houseNo').value = box.dataset.house;
        document.getElementById('street').value = box.dataset.street;
        document.getElementById('city').value = box.dataset.city;
        document.getElementById('country').value = box.dataset.country;
        document.getElementById('pincode').value = box.dataset.pincode;
        document.getElementById('saveAs').value = box.dataset.saveas;

        document.querySelectorAll('.saved-address-box').forEach(el => el.classList.remove('selected'));
        box.classList.add('selected');
        checkAddressFilled();
      });
    });

    function checkAddressFilled() {
      const allFilled = document.getElementById('houseNo').value &&
                        document.getElementById('street').value &&
                        document.getElementById('city').value &&
                        document.getElementById('country').value &&
                        document.getElementById('pincode').value;
      
      document.getElementById('placeOrderBtn').disabled = !allFilled;
      return allFilled;
    }

    document.querySelectorAll('#addressForm input').forEach(input => {
      input.addEventListener('input', checkAddressFilled);
    });
  </script>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <script>
    // jQuery and Logic (no changes needed)
    function updateTotalCost() {
      let total = 0;
      $(".item-total").each(function () {
        total += parseInt($(this).text().replace(/,/g, ''));
      });
      $("#total-cost").text(total.toLocaleString("en-IN"));
    }

    async function sendQuantityUpdate(productId, qty) {
      try {
        await fetch("/update-cart", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ productId, quantity: qty })
        });
      } catch (err) {
        console.error("Failed to update cart:", err);
      }
    }

    $(document).ready(function () {
      updateTotalCost();

      $(".increase-btn, .decrease-btn").on('click', function() {
        const card = $(this).closest(".order-card");
        const price = parseInt(card.find(".unit-price").text());
        const qtyElem = card.find(".quantity");
        let qty = parseInt(qtyElem.text());

        if ($(this).hasClass('increase-btn')) {
          qty++;
        } else if (qty > 1) {
          qty--;
        } else {
          sendQuantityUpdate(card.data("id"), 0);
          card.remove();
          updateTotalCost();
          return;
        }
        
        qtyElem.text(qty);
        card.find(".item-total").text((price * qty).toLocaleString('en-IN'));
        updateTotalCost();
        sendQuantityUpdate(card.data("id"), qty);
      });

      $("#placeOrderBtn").click(function() {
        $("#proceedToPaymentBtn").prop("disabled", false);
        $('html, body').animate({ scrollTop: $("#proceedToPaymentBtn").offset().top - 100 }, 500);
      });

      $("#proceedToPaymentBtn").click(function() {
        const totalCost = parseInt($("#total-cost").text().replace(/,/g, ''));
        if (totalCost > 0) {
          window.location.href = `/products/all-products/payment?amount=${totalCost}`;
        } else {
          alert("Your cart is empty.");
        }
      });

      $("#addressForm").submit(function(e) {
        e.preventDefault();
        alert("Address saved successfully!");
        $("#placeOrderBtn").prop("disabled", false);
        this.submit();
      });
    });
  </script>
</body>
</html>
