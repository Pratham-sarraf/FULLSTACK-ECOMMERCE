<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>My Cart | UrbanCommerce</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&family=Righteous&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --primary: #6c5ce7;
      --secondary: #00cec9;
      --accent: #fd79a8;
      --dark: #2d3436;
      --light: #f5f6fa;
      --success: #00b894;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, var(--primary), var(--secondary));
      color: var(--dark);
      padding: 2rem;
      min-height: 100vh;
    }

    .orders-container {
      max-width: 1200px;
      margin: auto;
    }

    .orders-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }

    .orders-title {
      font-size: 2rem;
      font-family: 'Righteous', cursive;
      color: white;
    }

    .profile-btn {
      background: linear-gradient(to right, var(--primary), var(--accent));
      color: white;
      padding: 0.8rem 1.2rem;
      border-radius: 10px;
      text-decoration: none;
      font-weight: bold;
    }

    .orders-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1.5rem;
    }

    .order-card {
      background: white;
      padding: 1rem;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .order-image {
      width: 100%;
      height: 150px;
      object-fit: contain;
      margin-bottom: 1rem;
    }

    .order-name {
      font-size: 1.1rem;
      font-weight: bold;
      margin-bottom: 0.5rem;
    }

    .order-price, .order-total {
      font-weight: bold;
      margin: 0.3rem 0;
    }

    .order-quantity {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-top: 0.5rem;
    }

    .order-quantity button {
      padding: 5px 10px;
      font-size: 16px;
      font-weight: bold;
      background: var(--primary);
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .order-quantity span.quantity {
      min-width: 24px;
      text-align: center;
    }

    .no-orders {
      grid-column: 1 / -1;
      text-align: center;
      color: white;
      font-size: 1.2rem;
      background: rgba(0,0,0,0.2);
      padding: 2rem;
      border-radius: 10px;
    }

    /* address.css */

.address-form {
  margin: 40px auto;
  max-width: 600px;
  padding: 30px;
  border-radius: 16px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);
  background: #ffffff;
  display: flex;
  flex-direction: column;
  gap: 20px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.address-form h2 {
  text-align: center;
  margin-bottom: 10px;
  color: #333;
}

.address-form input {
  padding: 12px 15px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 8px;
  transition: border 0.3s;
}

.address-form input:focus {
  outline: none;
  border-color: #4a90e2;
  box-shadow: 0 0 4px rgba(74, 144, 226, 0.4);
}

.address-form button {
  padding: 12px;
  font-size: 16px;
  border: none;
  background-color: #4a90e2;
  color: #fff;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.address-form button:hover {
  background-color: #357abd;
}

/* Wrapper for left & right sections */
.address-wrapper {
  display: flex;
  flex-wrap: wrap;
  gap: 40px;
  justify-content: space-between;
  margin: 40px auto;
  max-width: 1100px;
}

/* Left side (form) */
.form-section {
  flex: 1;
  min-width: 300px;
}

/* Right side (saved addresses) */
.saved-section {
  flex: 1;
  min-width: 250px;
}

.saved-section h2 {
  font-size: 20px;
  margin-bottom: 15px;
  color: #333;
}

.saved-addresses {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.saved-address-box {
  background-color: #f3f3f3;
  padding: 15px;
  border-radius: 10px;
  font-weight: bold;
  text-align: center;
  border: 1px solid #ccc;
  transition: transform 0.2s;
}

.saved-address-box:hover {
  transform: scale(1.03);
  background-color: #eaeaea;
}
/* Wrapper: saved address on left, form centered */
.address-wrapper {
  display: flex;
  justify-content: center;
  gap: 30px;
  margin-top: 40px;
  flex-wrap: wrap;
}

/* Left small column: Saved Addresses */
.saved-section {
  flex: 0 0 200px;
}

.saved-section h2 {
  font-size: 18px;
  margin-bottom: 10px;
  text-align: left;
  color: #333;
}

.saved-addresses {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.saved-address-box {
  background-color: #f9f9f9;
  padding: 10px 12px;
  border: 1px solid #ccc;
  border-radius: 8px;
  font-weight: bold;
  text-align: center;
  font-size: 14px;
  transition: background-color 0.3s;
}

.saved-address-box:hover {
  background-color: #e0e0e0;
}

/* Form stays full-width and centered */
.form-section {
  flex: 1;
  max-width: 600px;
}

.address-form {
  background: #ffffff;
  padding: 30px;
  border-radius: 16px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.address-form h2 {
  text-align: center;
  margin-bottom: 10px;
  color: #333;
}

.address-form input {
  padding: 12px 15px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 8px;
  transition: border 0.3s;
}

.address-form input:focus {
  outline: none;
  border-color: #4a90e2;
  box-shadow: 0 0 4px rgba(74, 144, 226, 0.4);
}

.address-buttons {
  display: flex;
  justify-content: space-between;
  gap: 20px;
}

.address-buttons button {
  flex: 1;
  padding: 12px;
  font-size: 16px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.address-buttons button:first-child {
  background-color: #4caf50; /* Save - Green */
  color: white;
}

.address-buttons button:first-child:hover {
  background-color: #3e8e41;
}

.address-buttons .order-btn {
  background-color: #f44336; /* Order - Red */
  color: white;
}

.address-buttons .order-btn:hover {
  background-color: #d32f2f;
}

/* Wrapper */
.address-container {
  position: relative;
  max-width: 800px;
  margin: 60px auto;
}

/* Centered Form */
.address-form {
  width: 100%;
  background: #ffffff;
  padding: 30px;
  border-radius: 16px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);
  display: flex;
  flex-direction: column;
  gap: 20px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.address-form h2 {
  text-align: center;
  margin-bottom: 10px;
  color: #333;
}

.address-form input {
  padding: 12px 15px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 8px;
  transition: border 0.3s;
}

.address-form input:focus {
  outline: none;
  border-color: #4a90e2;
  box-shadow: 0 0 4px rgba(74, 144, 226, 0.4);
}

.address-buttons {
  display: flex;
  justify-content: space-between;
  gap: 20px;
}

.address-buttons button {
  flex: 1;
  padding: 12px;
  font-size: 16px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.address-buttons button:first-child {
  background-color: #4caf50; /* Save - Green */
  color: white;
}

.address-buttons button:first-child:hover {
  background-color: #3e8e41;
}

.address-buttons .order-btn {
  background-color: aquamarine; /* Order - Red */
  color: white;
}

.address-buttons .order-btn:hover {
  background-color: aqua;
}

/* Saved Address Box on Top Right */
.saved-address-section {
  position: absolute;
  top: 0;
  right: -260px;
  width: 220px;
  background-color: #fafafa;
  border: 1px solid #ddd;
  padding: 15px;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

.saved-address-section h3 {
  font-size: 16px;
  margin-bottom: 10px;
  color: #333;
  text-align: center;
}

.saved-address-list {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.saved-address-box {
  background-color: #f0f0f0;
  padding: 10px;
  border-radius: 6px;
  text-align: center;
  font-weight: bold;
  font-size: 14px;
  transition: background-color 0.3s;
}

.saved-address-box:hover {
  background-color: #e0e0e0;
}

/* Payment button styles */
.payment-btn-container {
  text-align: center;
  margin-top: 30px;
  margin-bottom: 50px;
}

#proceedToPaymentBtn {
  background-color: #6c5ce7;
  color: white;
  padding: 15px 30px;
  font-size: 18px;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.3s;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

#proceedToPaymentBtn:hover {
  background-color: #5649c0;
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(0,0,0,0.15);
}

#proceedToPaymentBtn:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.selected {
  background-color: #b2ebf2 !important;
  border: 2px solid #00bcd4 !important;
}

.address-filled {
  display: none;
}

  </style>
</head>
<body>
  <div class="orders-container">
    <header class="orders-header">
      <h1 class="orders-title">CART</h1>
      <h1 class="orders-title">TOTAL: â‚¹<span id="total-cost">0</span> </h1>
      <a href="/user-profile" class="profile-btn">
        <i class="fas fa-user"></i> <%= user.username.toUpperCase() %>
      </a>
    </header>

    <div class="orders-grid">
      <% if (products.length > 0) { %>
        <% products.forEach(product => { %>
          <div class="order-card" data-id="<%= product._id %>">
            <img src="<%= product.url %>" alt="<%= product.name %>" class="order-image">
            <div class="order-name"><%= product.name %></div>
            <div class="order-price">Price: â‚¹<span class="unit-price"><%= product.price %></span></div>
            <div class="order-quantity">
              <button class="decrease-btn">âˆ’</button>
              <span class="quantity"><%= product.count %></span>
              <button class="increase-btn">+</button>
            </div>
    <div class="order-total">
  Total: â‚¹<span class="item-total"><%= (product.price * product.count).toLocaleString('en-IN') %></span>
</div>

          </div>
        <% }) %>
      <% } else { %>
        <div class="no-orders">
          <i class="fas fa-box-open"></i>
          You haven't ordered anything yet!
        </div>
      <% } %>
    </div>
  </div>

  <!-- Address Section -->
  <div class="address-container">
    <!-- Centered Address Form -->
    <form action="/products/all-products/save-address" method="POST" class="address-form" id="addressForm">
      <h2>Enter Delivery Address</h2>

      <input type="text" name="houseNo" id="houseNo" placeholder="House No." required>
      <input type="text" name="street" id="street" placeholder="Street" required>
      <input type="text" name="city" id="city" placeholder="City" required>
      <input type="text" name="country" id="country" placeholder="Country" required>
      <input type="text" name="pincode" id="pincode" placeholder="Pincode" required>
      <input type="text" name="saveAs" id="saveAs" placeholder="Save As (e.g. Home, Office)" >

      <div class="address-buttons">
        <button type="submit" id="saveAddressBtn">Save Address</button>
        <button type="button" class="order-btn" id="placeOrderBtn" disabled>Place Order</button>
      </div>
    </form>

    <!-- Saved Addresses -->
    <div class="saved-address-section">
      <h3>Saved Addresses</h3>
      <div class="saved-address-list">
        <% if (user.address && user.address.length > 0) { %>
          <% user.address.forEach(addr => { %>
            <div
              class="saved-address-box"
              data-house="<%= addr.houseNo %>"
              data-street="<%= addr.street %>"
              data-city="<%= addr.city %>"
              data-country="<%= addr.country %>"
              data-pincode="<%= addr.pincode %>"
              data-saveas="<%= addr.saveAs %>"
            >
              <%= addr.saveAs %>
            </div>
          <% }) %>
        <% } else { %>
          <p>No saved addresses</p>
        <% } %>
      </div>
    </div>
  </div>

  <!-- New button for proceeding to payment -->
  <div class="payment-btn-container">
    <button id="proceedToPaymentBtn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-lg shadow-lg transition-all duration-200" disabled>
      Proceed to Payment
    </button>
  </div>

  <!-- Autofill Script -->
  <script>
    document.querySelectorAll('.saved-address-box').forEach(box => {
      box.addEventListener('click', () => {
        document.getElementById('houseNo').value = box.dataset.house;
        document.getElementById('street').value = box.dataset.street;
        document.getElementById('city').value = box.dataset.city;
        document.getElementById('country').value = box.dataset.country;
        document.getElementById('pincode').value = box.dataset.pincode;


        document.querySelectorAll('.saved-address-box').forEach(el => el.classList.remove('selected'));
        box.classList.add('selected');
        
        // Enable the Place Order button when an address is selected
        document.getElementById('placeOrderBtn').disabled = false;
        checkAddressFilled();
      });
    });

    // Function to check if all address fields are filled
    function checkAddressFilled() {
      const houseNo = document.getElementById('houseNo').value;
      const street = document.getElementById('street').value;
      const city = document.getElementById('city').value;
      const country = document.getElementById('country').value;
      const pincode = document.getElementById('pincode').value;
      const saveAs = document.getElementById('saveAs').value;
      
      const allFilled = houseNo && street && city && country && pincode;
      
      // Enable/disable buttons based on whether all fields are filled
      document.getElementById('placeOrderBtn').disabled = !allFilled;
      
      return allFilled;
    }

    // Add event listeners to all address fields to check when they change
    document.querySelectorAll('#addressForm input').forEach(input => {
      input.addEventListener('input', checkAddressFilled);
    });
  </script>

  <!-- jQuery and Logic -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <script>
    function updateTotalCost() {
      let total = 0;
      $(".item-total").each(function () {
        total += parseInt($(this).text());
      });
      $("#total-cost").text(total.toLocaleString("en-IN"));
    }

    async function sendQuantityUpdate(productId, qty) {
      try {
        const res = await fetch("/update-cart", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ productId, quantity: qty })
        });
        const data = await res.json();
        console.log("Cart updated:", data);
      } catch (err) {
        console.error("Failed to update cart:", err);
      }
    }

    $(document).ready(function () {
      $(".increase-btn").click(function () {
        const card = $(this).closest(".order-card");
        const productId = card.data("id");
        const price = parseInt(card.find(".unit-price").text());
        const qtyElem = card.find(".quantity");
        let qty = parseInt(qtyElem.text()) + 1;

        qtyElem.text(qty);
        card.find(".item-total").text(price * qty);
        updateTotalCost();
        sendQuantityUpdate(productId, qty);
      });

      $(".decrease-btn").click(function () {
        const card = $(this).closest(".order-card");
        const productId = card.data("id");
        const price = parseInt(card.find(".unit-price").text());
        const qtyElem = card.find(".quantity");
        let qty = parseInt(qtyElem.text());

        if (qty > 1) {
          qty -= 1;
          qtyElem.text(qty);
          card.find(".item-total").text(price * qty);
          updateTotalCost();
          sendQuantityUpdate(productId, qty);
        } else if (qty === 1) {
          card.remove();
          updateTotalCost();
          sendQuantityUpdate(productId, 0);
        }
      });

      // Event listener for the Place Order button
      $("#placeOrderBtn").click(function() {
        // Enable the Proceed to Payment button when Place Order is clicked
        $("#proceedToPaymentBtn").prop("disabled", false);
        
        // Scroll to the payment button
        $('html, body').animate({
          scrollTop: $("#proceedToPaymentBtn").offset().top - 100
        }, 500);
      });

      // Event listener for the Proceed to Payment button
      $("#proceedToPaymentBtn").click(function() {
        const totalCost = parseInt($("#total-cost").text().replace(/,/g, ''));
        if (totalCost > 0) {
          // Collect address data
          const address = {
            houseNo: $("#houseNo").val(),
            street: $("#street").val(),
            city: $("#city").val(),
            country: $("#country").val(),
            pincode: $("#pincode").val()
          };
          
          // You might want to save the address with the order here
          console.log("Order address:", address);
          
          // Proceed to payment
          window.location.href = `/products/all-products/payment?amount=${totalCost}`;
        } else {
          console.log("Your cart is empty. Please add items before proceeding to payment.");
        }
      });

      // Form submission for saving address
      $("#addressForm").submit(function(e) {
     
        
        // Here you would typically send the address data to your server
        // For now, we'll just log it and show a success message
        console.log("Address saved:", {
          houseNo: $("#houseNo").val(),
          street: $("#street").val(),
          city: $("#city").val(),
          country: $("#country").val(),
          pincode: $("#pincode").val(),
          saveAs: $("#saveAs").val()
        });
        
        alert("Address saved successfully!");
        
        // Enable the Place Order button after saving
        $("#placeOrderBtn").prop("disabled", false);
      });

      updateTotalCost();
    });
  </script>
</body>
</html>