<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Add Product | Admin Dashboard</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <style>
    :root {
      --primary: #6c5ce7;
      --secondary: #00cec9;
      --accent: #fd79a8;
      --dark: #2d3436;
      --light: #f5f6fa;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, var(--primary), var(--secondary));
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 2rem;
      color: var(--dark);
    }
    
    .container {
      width: 100%;
      max-width: 500px;
      animation: fadeIn 0.6s ease-out;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .form-card {
      background: rgba(255, 255, 255, 0.95);
      border-radius: 16px;
      padding: 2.5rem;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      backdrop-filter: blur(8px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      transition: transform 0.3s ease;
    }
    
    .form-card:hover {
      transform: translateY(-5px);
    }
    
    h1 {
      text-align: center;
      margin-bottom: 2rem;
      color: var(--primary);
      font-size: 2rem;
      position: relative;
    }
    
    h1::after {
      content: '';
      display: block;
      width: 60px;
      height: 4px;
      background: linear-gradient(to right, var(--accent), var(--secondary));
      margin: 0.5rem auto 0;
      border-radius: 2px;
    }
    
    .form-group {
      margin-bottom: 1.5rem;
      position: relative;
    }
    
    label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 600;
      color: var(--dark);
    }
    
    input {
      width: 100%;
      padding: 1rem;
      border: 2px solid #e0e0e0;
      border-radius: 10px;
      font-size: 1rem;
      transition: all 0.3s ease;
      background: rgba(255, 255, 255, 0.9);
    }
    
    input:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.2);
      outline: none;
    }
    
    button {
      width: 100%;
      padding: 1rem;
      border: none;
      border-radius: 10px;
      font-size: 1.1rem;
      font-weight: 600;
      background: linear-gradient(to right, var(--primary), var(--accent));
      color: white;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-top: 1rem;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }
    
    button:hover {
      background: linear-gradient(to right, var(--accent), var(--primary));
      box-shadow: 0 8px 15px rgba(108, 92, 231, 0.3);
      transform: translateY(-2px);
    }
    
    button:active {
      transform: translateY(0);
    }
    
    .floating-bg {
      position: fixed;
      width: 300px;
      height: 300px;
      border-radius: 50%;
      background: rgba(253, 121, 168, 0.1);
      filter: blur(60px);
      z-index: -1;
    }
    
    .bg-1 {
      top: 20%;
      left: 10%;
      animation: float 8s ease-in-out infinite;
    }
    
    .bg-2 {
      bottom: 15%;
      right: 10%;
      animation: float 10s ease-in-out infinite reverse;
    }
    
    @keyframes float {
      0% { transform: translateY(0) rotate(0deg); }
      50% { transform: translateY(-20px) rotate(5deg); }
      100% { transform: translateY(0) rotate(0deg); }
    }
  </style>
</head>
<body>
  <!-- Floating background elements -->
  <div class="floating-bg bg-1"></div>
  <div class="floating-bg bg-2"></div>

  <div class="container">
    <div class="form-card">
      <h1><i class="fas fa-plus-circle"></i> Add New Product</h1>
      
      <form id="addProduct" action="/admin/add-product" method="POST">
        <div class="form-group">
          <label for="name">Product Name</label>
          <input type="text" id="name" name="name" placeholder="Enter product name" required />
        </div>
        
        <div class="form-group">
          <label for="price">Price ($)</label>
          <input type="number" step="0.01" id="price" name="price" placeholder="0.00" required />
        </div>
        
        <div class="form-group">
          <label for="url">Product URL</label>
          <input type="url" id="url" name="url" placeholder="https://example.com/image.jpg" required />
        </div>
        
        <button type="submit">
          <i class="fas fa-paper-plane"></i> Add Product
        </button>
      </form>
    </div>
  </div>



  <script>
    window.addEventListener('DOMContentLoaded', () => {
      const addProduct = document.getElementById("addProduct");

      addProduct.addEventListener("submit", (e) => {
        e.preventDefault();

        // Form validation
        const name = document.getElementById("name").value.trim();
        const price = parseFloat(document.getElementById("price").value);
        const url = document.getElementById("url").value.trim();

        if (!name || isNaN(price) || !url) {
          alert("Please fill all fields correctly");
          return;
        }

        // Add loading state
        const submitBtn = addProduct.querySelector('button[type="submit"]');
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
        submitBtn.disabled = true;

        // Send data
        fetch('/admin/add-product', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ name, price, url })
        })
        .then(response => {
          if (!response.ok) throw new Error('Network response was not ok');
          return response.json();
        })
        .then(data => {
          // Success animation
          submitBtn.innerHTML = '<i class="fas fa-check"></i> Success!';
          submitBtn.style.background = 'linear-gradient(to right, #00b894, #55efc4)';
          
          setTimeout(() => {
            addProduct.reset();
            submitBtn.innerHTML = '<i class="fas fa-paper-plane"></i> Add Product';
            submitBtn.style.background = 'linear-gradient(to right, var(--primary), var(--accent))';
            submitBtn.disabled = false;
          }, 1500);
        })
        .catch(error => {
          console.error('Error:', error);
          submitBtn.innerHTML = '<i class="fas fa-exclamation-circle"></i> Try Again';
          submitBtn.style.background = 'linear-gradient(to right, #ff7675, #d63031)';
          
          setTimeout(() => {
            submitBtn.innerHTML = '<i class="fas fa-paper-plane"></i> Add Product';
            submitBtn.style.background = 'linear-gradient(to right, var(--primary), var(--accent))';
            submitBtn.disabled = false;
          }, 1500);
        });
      });
    });
  </script>
</body>
</html>