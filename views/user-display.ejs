<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>User Management |Urban Commerce Admin</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&family=Righteous&display=swap" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

  <style>
    :root {
      --primary: #6c5ce7;
      --secondary: #00cec9;
      --accent: #fd79a8;
      --dark: #2d3436;
      --light: #f5f6fa;
      --admin: #0984e3;
      --user: #00b894;
      --danger: #ff7675;
      --success: #2ecc71;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, var(--primary), var(--secondary));
      min-height: 100vh;
      padding: 2rem;
      color: var(--light);
    }
    
    .admin-container {
      max-width: 1200px;
      margin: 0 auto;
      animation: fadeIn 0.6s ease-out;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .admin-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
      padding: 1rem;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 15px;
      backdrop-filter: blur(10px);
      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.2);
    }
    
    .admin-title {
      font-family: 'Righteous', cursive;
      font-size: 2rem;
      background: linear-gradient(to right, var(--accent), #fff);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    .header-actions {
      display: flex;
      align-items: center;
      gap: 1rem;
    }
    
    .user-count {
      font-weight: 600;
    }
    
    .user-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 1.5rem;
    }
    
    .user-card {
      background: rgba(255, 255, 255, 0.1);
      border-radius: 15px;
      padding: 1.5rem;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      backdrop-filter: blur(5px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      transition: all 0.3s ease;
      position: relative;
    }
    
    .user-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 20px rgba(0, 0, 0, 0.2);
      background: rgba(255, 255, 255, 0.15);
    }
    .user-card-link {
  display: block;
  text-decoration: none;
  color: inherit;
}
.user-card-link:hover .user-card {
  transform: translateY(-5px);
  box-shadow: 0 12px 20px rgba(0, 0, 0, 0.2);
  background: rgba(255, 255, 255, 0.15);
}

    .user-header {
      display: flex;
      align-items: center;
      margin-bottom: 1rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .user-avatar {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      background: linear-gradient(45deg, var(--primary), var(--accent));
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-weight: bold;
      font-size: 1.2rem;
      margin-right: 1rem;
    }
    
    .user-name {
      font-size: 1.2rem;
      font-weight: 600;
    }
    
    .user-role {
      display: inline-block;
      padding: 0.2rem 0.8rem;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: 600;
      margin-left: 0.5rem;
      color: white;
    }
    
    .role-admin { background: var(--admin); }
    .role-user { background: var(--user); }
    
    .user-details { margin-top: 1rem; }
    .detail-row {
      display: flex;
      margin-bottom: 0.5rem;
      align-items: center;
    }
    .detail-label {
      font-weight: 600;
      width: 100px;
      opacity: 0.8;
    }
    .detail-value { flex: 1; }
    
    .admin-toggle-container {
      display: flex;
      align-items: center;
      margin-top: 0.5rem;
      gap: 8px;
    }
    
    /* Toggle Switch Styling */
    .toggle-switch {
      position: relative;
      display: inline-block;
      width: 50px;
      height: 24px;
    }
    .toggle-switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0; left: 0; right: 0; bottom: 0;
      background-color: #ccc;
      transition: .4s;
      border-radius: 34px;
    }
    .slider:before {
      position: absolute;
      content: "";
      height: 18px; width: 18px;
      left: 3px; bottom: 3px;
      background-color: white;
      transition: .4s;
      border-radius: 50%;
    }
    input:checked + .slider { background-color: var(--admin); }
    input:checked + .slider:before { transform: translateX(26px); }
    
  
    /* Delete button */
    .btn-delete {
      background-color: var(--danger);
      color: white;
      border: none;
      padding: 0.5rem 1rem;
      font-size: 0.9rem;
      border-radius: 6px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      display: inline-flex;
      align-items: center;
      gap: 0.4rem;
    }
    .btn-delete:hover { background-color: #c0392b; }

        /* Toggle Switch Styling */
    .toggle-switch {
      position: relative;
      display: inline-block;
      width: 50px;
      height: 24px;
    }
    .toggle-switch input {
      display: none;
    }
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0; left: 0; right: 0; bottom: 0;
      background-color: #ccc;
      transition: 0.4s;
      border-radius: 24px;
    }
    .slider:before {
      position: absolute;
      content: "";
      height: 18px; width: 18px;
      left: 3px; bottom: 3px;
      background-color: white;
      transition: 0.4s;
      border-radius: 50%;
    }
    input:checked + .slider {
      background-color: #4CAF50;
    }
    input:checked + .slider:before {
      transform: translateX(26px);
    }

    /* Toast Styling */
    .toast {
      visibility: hidden;
      min-width: 280px;
      background-color: #333;
      color: #fff;
      text-align: center;
      border-radius: 8px;
      padding: 12px 20px;
      position: fixed;
      bottom: 30px;
      right: 30px;
      z-index: 1000;
      display: flex;
      align-items: center;
      gap: 10px;
      font-size: 1rem;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
      opacity: 0;
      transform: translateY(20px);
      transition: all 0.4s ease;
    }
    .toast.show {
      visibility: visible;
      opacity: 1;
      transform: translateY(0);
    }
    .toast.success {
      background-color: #2ecc71;
    }
    .toast.error {
      background-color: #e74c3c;
    }
    .btn-download {
      position: relative;
      left: 300px;
  background-color: #27ae60;
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 6px;
  text-decoration: none;
  font-weight: 600;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  transition: background-color 0.3s ease;
}
.btn-download:hover {
  background-color: #1e8449;
}
  </style>

</head>
<body>
  <div class="admin-container">
    <header class="admin-header">
      <h1 class="admin-title">USER MANAGEMENT</h1>
<a href="/admin/download-users" class="btn-download">
  <i class="fas fa-file-excel"></i> Download Excel
</a>
      <div class="header-actions">
        <span id="user-count" class="user-count">
          <%= users.length === 0 ? 0 : users.length %> Users
        </span>
      </div>


    </header>

<div class="user-list">
  <% if (users && users.length > 0) { %>
    <% users.forEach(user => { %>
      <a href="/admin/user/<%= user._id %>/admin-user-display" class="user-card-link">
        <div class="user-card">
          <div class="user-header">
            <div class="user-avatar">
              <%= user.username.charAt(0).toUpperCase() %>
            </div>
            <div>
              <span class="user-name"><%= user.username %></span>
              <span class="user-role role-<%= user.isAdmin ? 'admin' : 'user' %>">
                <%= user.isAdmin ? 'ADMIN' : 'USER' %>
              </span>
            </div>
          </div>

          <div class="user-details">
            <% if (user.email) { %>
              <div class="detail-row">
                <span class="detail-label">Email:</span>
                <span class="detail-value"><%= user.email %></span>
              </div>
            <% } %>
            <div class="detail-row">
              <span class="detail-label">Products:</span>
              <span class="detail-value"><%= user.products ? user.products.length : 0 %></span>
            </div>

            <div class="admin-toggle-container">
              <span class="detail-label">Admin:</span>
              <label class="toggle-switch">
                <input type="checkbox" class="admin-toggle" 
                       data-user-id="<%= user._id %>" 
                       <%= user.isAdmin ? 'checked' : '' %>>
                <span class="slider"></span>
              </label>
              <span class="user-role role-<%= user.isAdmin ? 'admin' : 'user' %>">
                <%= user.isAdmin ? 'Yes' : 'No' %>
              </span>
            </div>

      
          </div>
        </div>
      </a>
    <% }) %>
  <% } else { %>
    <div class="no-users">
      <p>No users found in the system</p>
    </div>
  <% } %>
</div>

</div>
  </div>

  <!-- Toast Notification -->
  <div class="toast" id="toast">
    <i id="toastIcon" class="fas"></i>
    <span id="toastMessage"></span>
  </div>



  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const adminToggles = document.querySelectorAll('.admin-toggle');
      const toast = document.getElementById('toast');
      const toastMessage = document.getElementById('toastMessage');
      const toastIcon = document.getElementById('toastIcon');
      
      adminToggles.forEach(toggle => {
        toggle.addEventListener('change', function() {
          const userId = this.dataset.userId;
          const isAdmin = this.checked;
          
          fetch('/admin/users/' + userId + '/toggle-admin', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ isAdmin: isAdmin })
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              const roleBadge = this.closest('.admin-toggle-container').querySelector('.user-role');
              roleBadge.textContent = isAdmin ? 'Yes' : 'No';
              roleBadge.className = isAdmin ? 'user-role role-admin' : 'user-role role-user';
              
              const mainRoleBadge = this.closest('.user-card').querySelector('.user-header .user-role');
              mainRoleBadge.textContent = isAdmin ? 'ADMIN' : 'USER';
              mainRoleBadge.className = isAdmin ? 'user-role role-admin' : 'user-role role-user';
              
              // ✅ Custom message based on toggle
              const msg = isAdmin ? "User made admin" : "User removed from admin";
              showToast(msg, 'success');
            } else {
              this.checked = !isAdmin;
              showToast('Failed to update admin status.', 'error');
            }
          })
          .catch(() => {
            this.checked = !isAdmin;
            showToast('An error occurred. Please try again.', 'error');
          });
        });
      });
      
      function showToast(message, type) {
        toastMessage.textContent = message;
        toast.className = `toast ${type} show`;
        toastIcon.className = type === 'success' ? "fas fa-check-circle" : "fas fa-times-circle";
        setTimeout(() => { toast.classList.remove('show'); }, 3000);
      }
    });
  </script>
</body>

</html>
